{"version":3,"sources":["webpack:///webpack/bootstrap b6a569b3dd4b3e2ff55c","webpack:///./src/GridMasonry.js"],"names":["GridMasonry","constructor","opt","items","requiredOpt","checkOptions","init","findItems","then","bindStyles","resizeItems","listenEvent","map","key","Error","container","document","querySelector","containerClass","Promise","resolve","reject","querySelectorAll","itemClass","NodeList","length","style","display","gridRowGap","gridColumnGap","gridTemplateColumns","itemMinWith","itemMaxWith","gridAutoRows","forEach","item","gridAutoColumns","rowGap","parseInt","window","getComputedStyle","getPropertyValue","rowHeight","itemContent","itemContentClass","rowSpan","Math","ceil","getBoundingClientRect","height","gridRowEnd","event","addEventListener","e"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b6a569b3dd4b3e2ff55c","let GridMasonry = class GridMasonry{\n  constructor(opt) {\n    this.opt = opt;\n    this.items = [];\n    this.requiredOpt = [\n      'containerClass',\n      'itemClass',\n      'itemContentClass',\n      'gridRowGap',\n      'gridColumnGap',\n      'itemMinWith',\n      'itemMaxWith',\n    ];\n    this.checkOptions();\n  }\n\n  /**\n   * Запускает необходимые методы для работы\n  */\n  init() {\n    this.items = [];\n    this.checkOptions();\n    this.findItems().then(() => {\n      this.bindStyles();\n      this.resizeItems()\n    });;\n    this.listenEvent();\n  }\n\n  /**\n   * Проверяет переданы ли обязательные параметры\n  */\n  checkOptions() {\n    this.requiredOpt.map(key => {\n      if (!this.opt[key]) throw new Error(\n        \"Required property '\" + key + \"' is not defined. \" + \n        \"You should define that property before call 'init' method.\"\n      );\n    });\n  }\n\n  /**\n   * Находит все элементы внутри списка\n  */\n  findItems() {\n    this.container = document.querySelector(this.opt.containerClass);\n    if (!this.container) throw new Error(\"Container with class '\" + this.opt.containerClass + \"' is not find.\");\n    return new Promise((resolve, reject) => {\n      this.items = this.container.querySelectorAll(this.opt.itemClass);\n      resolve(this.items);\n    });\n  }\n\n  /**\n   * Добавляет к контейнеру и элементам grid стили\n  */\n  bindStyles() {\n    if (!this.items || !(this.items instanceof NodeList) || !this.items.length) return;\n    this.container.style.display = 'grid';\n    this.container.style.gridRowGap = this.opt.gridRowGap;\n    this.container.style.gridColumnGap = this.opt.gridColumnGap;\n    this.container.style.gridTemplateColumns = 'repeat(auto-fill, minmax(' + this.opt.itemMinWith + ', ' + this.opt.itemMaxWith + '))';\n    //this.container.style.gridTemplateRows = 'none';\n    //this.container.style.gridTemplateRows = 'repeat(auto-fill, minmax(0px, max-content))';\n    this.container.style.gridAutoRows = '0';\n\n    this.items.forEach(item => {\n      //item.style.gridAutoRows = 'repeat(auto-fill, minmax(1px, 1fr))';\n      item.style.gridAutoRows = 0;\n      item.style.gridAutoColumns = 0;\n    });\n  }\n\n  /**\n   * Изменяет размер каждого элемента, в зависимости от его наполнения\n  */\n  resizeItems() {\n    if (!this.items || !(this.items instanceof NodeList) || !this.items.length) return;\n    let rowGap    = parseInt(window.getComputedStyle(this.container).getPropertyValue('grid-row-gap')),\n        rowHeight = parseInt(window.getComputedStyle(this.container).getPropertyValue('grid-auto-rows'));\n    this.items.forEach(item => {\n      let itemContent = item.querySelector(this.opt.itemContentClass), rowSpan = 0;\n      if (!itemContent) throw new Error(\"All grid items must contents 'div' element with class '\" + this.opt.itemContentClass + \"'.\");\n      rowSpan = Math.ceil((itemContent.getBoundingClientRect().height+rowGap)/(rowHeight+rowGap));\n      //rowSpan = Math.ceil((itemContent.getBoundingClientRect().height)/(rowHeight));\n      item.style.gridRowEnd = 'span ' + rowSpan;\n    });\n  }\n\n  /**\n   * Слушает события изменения страницы и запускает ресайз повторно\n  */\n  listenEvent() {\n    ['load', 'resize'].map(event => window.addEventListener(event, e => this.resizeItems()));\n  }\n}\nwindow.GridMasonry = GridMasonry;\nexport {GridMasonry as default};\n\n\n// WEBPACK FOOTER //\n// ./src/GridMasonry.js"],"sourceRoot":""}